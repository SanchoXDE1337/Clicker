{"version":3,"sources":["componets/SimpleCard.jsx","componets/Slider.jsx","App.js","serviceWorker.js","index.js"],"names":["SimpleCard","this","props","title","content","Card","style","marginBottom","CardContent","Typography","variant","component","paddingTop","CardActions","Button","color","size","onClick","id","React","Component","PrettoSlider","withStyles","root","height","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","PrettySlider","valueLabelDisplay","aria-label","value","step","min","max","onChange","MAX_VALUE","MIN_VALUE","App","state","articles","addArticle","a","fetch","json","text","setArticle","article","setState","deleteArticle","pop","handleDecrement","handleIncrement","handleChange","e","target","dif","Array","from","length","forEach","_","i","handleDeleteClick","splice","inputClick","select","handleSliderChange","Grid","container","spacing","direction","justify","alignItems","item","className","TextField","label","inputProps","textAlign","type","InputLabelProps","shrink","md","map","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5839e972.chunk.js","sourcesContent":["import React from 'react';\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\nexport default class SimpleCard extends React.Component {\n    render () {\n        const {title, content} = this.props;\n        return(\n        <Card style={{marginBottom:\"10px\"}}>\n            <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                    {title}\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\" style={{paddingTop:\"10px\"}}>\n                    {content}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    size={\"small\"}\n                    onClick={this.props.onClick}\n                    id={this.props.id}\n                >\n                    <DeleteForeverOutlinedIcon/>\n                </Button>\n            </CardActions>\n        </Card>\n        )\n    }\n}","import React from 'react';\nimport { withStyles} from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nconst PrettoSlider = withStyles({\n    root: {\n        color: '#52af77',\n        height: 20,\n    },\n    thumb: {\n        height: 24,\n        width: 24,\n        backgroundColor: '#fff',\n        border: '2px solid currentColor',\n        marginTop: -8,\n        marginLeft: -12,\n        '&:focus,&:hover,&$active': {\n            boxShadow: 'inherit',\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: 'calc(-50% + 4px)',\n    },\n    track: {\n        height: 8,\n        borderRadius: 4,\n    },\n    rail: {\n        height: 8,\n        borderRadius: 4,\n    },\n})(Slider);\nexport default function PrettySlider(props) {\n    return (\n        <PrettoSlider\n            valueLabelDisplay=\"auto\"\n            aria-label=\"pretto slider\"\n            // aria-valuenow={props.value}\n            value={props.value}\n            step={1}\n            min={0}\n            max={10}\n            onChange={props.onChange}\n        />\n    );\n}\n","import React from 'react';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport {Grid} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SimpleCard from \"./componets/SimpleCard\";\nimport PrettySlider from \"./componets/Slider\";\n\nconst MAX_VALUE = 10;\nconst MIN_VALUE = 0;\n\nclass App extends React.Component {\n\n    state = {articles: [], value: 0};\n\n\n    async componentDidMount() {\n        await this.addArticle();\n        this.setState({value: this.state.articles.length});\n\n    }\n\n    addArticle = async () => {\n        const title = (await (await fetch('https://fish-text.ru/get?type=title')).json()).text;\n        const content = (await (await fetch('https://fish-text.ru/get')).json()).text;\n        this.setArticle({title, content})\n    };\n\n    setArticle = (article) => this.setState({articles: [...this.state.articles, article]});\n\n    deleteArticle = () => {\n        this.state.articles.pop();\n        this.setState({articles: this.state.articles})\n    };\n\n\n    handleDecrement = () => {\n        if (this.state.value !== MIN_VALUE) {\n            this.setState({value: this.state.value - 1});\n            this.deleteArticle();\n        }\n    };\n\n    handleIncrement = () => {\n        if (this.state.value !== MAX_VALUE) {\n            this.setState({value: this.state.value + 1});\n            this.addArticle()\n        }\n    };\n\n    handleChange = (e) => {\n        if (e.target.value <= MAX_VALUE && e.target.value >= MIN_VALUE) {\n            const dif = e.target.value - this.state.value;\n            dif > 0\n                ? Array.from({length: dif}).forEach((_, i) => this.addArticle())\n                : Array.from({length: dif * -1}).forEach((_, i) => this.deleteArticle());\n            this.setState({value: +e.target.value});\n\n        }\n    };\n\n    handleDeleteClick = async (e) => {\n        let articles = [...this.state.articles];\n        const id = e.target.id;\n        let value = this.state.value;\n        articles.splice(id, 1);\n        await this.setState({articles});\n        await this.setState({value: value - 1});\n    };\n\n    inputClick = (e) => e.target.select();\n\n    handleSliderChange = async (e, value) => {\n        const dif = value - this.state.value;\n        dif > 0\n            ? Array.from({length: dif}).forEach((_, i) => this.addArticle())\n            : Array.from({length: dif * -1}).forEach((_, i) => this.deleteArticle());\n        await this.setState({value});\n    };\n\n    render() {\n        const {value, articles} = this.state;\n        return(\n            <Grid\n                container={true}\n                spacing={3}\n                direction=\"column\"\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <h1>CLICKER</h1>\n                </Grid>\n\n                <Grid item className={\"slider\"}>\n                    <PrettySlider\n                        value = {value}\n                        onChange={this.handleSliderChange}\n                    />\n                </Grid>\n\n                <Grid item>\n                    <Grid\n                        container\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        spacing={2}\n                    >\n                        <Grid item>\n                            <Button\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                size={\"large\"}\n                                onClick={this.handleDecrement}\n                            >-</Button>\n                        </Grid>\n                        <Grid item>\n                            <TextField\n                                id=\"outlined-number\"\n                                label=\"Articles:\"\n                                value={value}\n                                inputProps={{\n                                    style: { textAlign: \"center\" }\n                                }}\n                                onChange={this.handleChange}\n                                type=\"number\"\n                                onClick={this.inputClick}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                variant=\"outlined\"\n                            />\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                size={\"large\"}\n                                onClick={this.handleIncrement}\n                            >+</Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n\n                <Grid item md={4} className={\"main\"}>\n                    {articles.map(({title, content}, i) => <SimpleCard\n                        title={title} content={content}\n                        key={i}\n                        id={i}\n                        articles={this.state.articles}\n                        onClick={this.handleDeleteClick} />)}\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}